networks:
  web_net:
    name: web_net
    external: false
  app_net:
    name: app_net
    external: false

volumes:
  gitlab_backup:
    name: gitlab_backup
  gitlab_data:
    name: gitlab_data
  gitlab_logs:
    name: gitlab_logs
  gitlab_config:
    name: gitlab_config

services:
  gitlab:
    image: gitlab/gitlab-ce:${GITLAB_IMAGE_TAG}
    restart: always
    container_name: gitlab
    hostname: ${GIT_DOMAIN}
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        # Gitlab external url
        external_url 'http://${GIT_DOMAIN}'

        # Change the initial default admin password
        #        gitlab_rails['initial_root_password'] = "${GITLAB_ROOT_PASSWORD}"
        #        gitlab_rails['display_initial_root_password'] = "false"
        #        gitlab_rails['store_initial_root_password'] = "false"

        # Nginx Configuration
        nginx['client_max_body_size'] = '10240m'
        nginx['gzip_enabled'] = true
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['proxy_cache'] = 'gitlab'
        nginx['http2_enabled'] = true
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['http2_enabled'] = false
        #        nginx['proxy_set_headers'] = {
        #          "Host" => "$$http_host",
        #          "X-Real-IP" => "$$remote_addr",
        #          "X-Forwarded-For" => "$$proxy_add_x_forwarded_for",
        #          "X-Forwarded-Proto" => "https",
        #          "X-Forwarded-Ssl" => "on"
        #        }

        # Disable unuse services
        prometheus['enable'] = false
        alertmanager['enable'] = false

        # gitlab backup config
        gitlab_rails['manage_backup_path'] = true
        gitlab_rails['backup_path'] = "/var/opt/gitlab/backups"
        gitlab_rails['backup_archive_permissions'] = 0644
        gitlab_rails['backup_keep_time'] = 604800
        gitlab_rails['env'] = {"SKIP" => "registry"}


        # Gitlab registry config
        registry_external_url 'http://${RIGISTRY_SUB}.${DOMAIN_ADDRESS}'
        registry_nginx['listen_port'] = 5100
        registry_nginx['listen_https'] = false
        #        registry_nginx['proxy_set_headers'] = {
        #          "Host" => "$$http_host",
        #          "X-Real-IP" => "$$remote_addr",
        #          "X-Forwarded-For" => "$$proxy_add_x_forwarded_for",
        #          "X-Forwarded-Proto" => "https",
        #          "X-Forwarded-Ssl" => "on"
        #        }

    labels:
      # gitlab web config
      - traefik.enable=true
      - traefik.docker.network=web_net
      - traefik.http.routers.gitlab.entrypoints=http
      - traefik.http.routers.gitlab.rule=Host(`${GIT_DOMAIN}`)
        #      - traefik.http.routers.gitlab.middlewares=https-redirect
        #      - traefik.http.routers.gitlab-secure.entrypoints=https
        #      - traefik.http.routers.gitlab-secure.rule=Host(`${GIT_DOMAIN}`)
        #      - traefik.http.routers.gitlab-secure.tls=true
        #      - traefik.http.routers.gitlab-secure.tls.options=default
      - traefik.http.routers.gitlab.service=gitlab
        #      - traefik.http.routers.gitlab-secure.service=gitlab
        #      - traefik.http.routers.gitlab-secure.tls.certresolver=mycert
      - traefik.http.services.gitlab.loadbalancer.server.port=80
      # gitlab registry config
      - traefik.http.routers.gitlab-registry.entrypoints=http
      - traefik.http.routers.gitlab-registry.rule=Host(`${RIGISTRY_SUB}.${DOMAIN_ADDRESS}`)
        #      - traefik.http.routers.gitlab-registry.middlewares=https-redirect
      - traefik.http.routers.gitlab-registry.service=gitlab-registry
        #      - traefik.http.routers.gitlab-registry-secure.service=gitlab-registry
        #      - traefik.http.routers.gitlab-registry-secure.entrypoints=https
        #      - traefik.http.routers.gitlab-registry-secure.rule=Host(`${RIGISTRY_SUB}.${DOMAIN_ADDRESS}`)
        #      - traefik.http.routers.gitlab-registry-secure.tls=true
        #      - traefik.http.routers.gitlab-registry-secure.tls.options=default
        #      - traefik.http.routers.gitlab-registry-secure.tls.certresolver=mycert
      - traefik.http.services.gitlab-registry.loadbalancer.server.port=5100
    volumes:
      - gitlab_backup:/var/opt/gitlab/backups
      - gitlab_data:/var/opt/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_config:/etc/gitlab
    ports:
      - "22:22"
    networks:
      - web_net
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    volumes:
      - ./volumes/runner/config/:/etc/gitlab-runner:Z
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web_net
      - app_net
    labels:
      - traefik.enable=false
